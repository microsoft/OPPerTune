[build-system]
requires = ["setuptools >= 68.0", "wheel >= 0.42"]
build-backend = "setuptools.build_meta"

[project]
name = "oppertune-algorithms"
version = "0.2.0"
authors = [
    { name = "Karan Tandon", email = "karantandon@microsoft.com" },
    { name = "Anush Kini", email = "t-anushkini@microsoft.com" },
    { name = "Mayukh Das", email = "mayukhdas@microsoft.com" },
]
description = "Python implementation of the OPPerTune algorithms."
readme = "README.md"
requires-python = ">= 3.8"
keywords = ["oppertune", "oppertune-algorithms"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "gymnasium ~= 0.26",
    "hyperopt ~= 0.2.7",
    "joblib ~= 1.3",
    "numpy ~= 1.19",
    "scikit-optimize == 0.9",
    "setuptools",
    "torch >= 1.13, < 3.0",
    "vowpalwabbit >= 9.4.0, < 10.0",

    "oppertune-core",
]

[project.urls]
Homepage = "https://aka.ms/OPPerTune"
Code = "https://dev.azure.com/msri/OneCOGS/_git/SelfTune"

[project.optional-dependencies]
dev = ["ruff ~= 0.11", "pytest >= 7.1, < 9.0", "setuptools"]

[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = [
    "ANN",    # flake8-annotations
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "T",      # flake8-debugger, flake8-print
    "Q",      # flake8-quotes
    "SIM",    # flake8-simplify
    "RET503", # implicit-return
    "I",      # isort
    "C90",    # mccabe
    "N",      # pep8-naming
    "E",      # pycodestyle
    "W",      # pycodestyle warnings
    "D",      # pydocstyle
    "F",      # Pyflakes
    "UP",     # pyupgrade
]
ignore = [
    "ANN204", # Missing return type annotation for special method
    "D105",   # Missing docstring in magic method
    "UP036",  # Version block is outdated for minimum Python version
]
mccabe = { max-complexity = 14 }
pydocstyle = { convention = "google" }

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = [
    "T201", # `print` used
]
